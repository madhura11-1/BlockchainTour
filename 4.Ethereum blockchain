
1. Uses aacount to transfer the money ,data ,message.
2. Account is originator and target of transaction.
3. Two types of accounts:      Contract account (CA)         ----     only for smart contracts. 
                               The address of this account is determined from tjhe creators address + transaction nonce.
                               Externally Owned Account (EOA)     ----- needed to participate in ehtereum.
                               The address of this account is the creators public key.
4.Transaction need fees to be paid and if balance of account is enough to pay fees only then it can do transaction.
5. Wei(fees are paid in wei) = 1 Ethereum = 10^18 wei.
6. Every 17 seconds new block is created.
7. Keyfiles are used to store private key encrypted by password.
8. Interactive users : which give password run time.
9. Non interactive users : which provide password thorugh a file.
10. Every miner gets a reward of 5 ethers.
11. There is no limit on number of ethers produced.
12. Every ethereum block does not hold fix number of transaction	

Keystores :
             Keystores are used to store keyfiles .
             two types:
                         1.Standard :   standard needs 256MB memory and 1 second processing on a modern CPU to access a key
                                        More secure ans recommended.
  
                         2.Light :  light needs 4MB memory and 100 millisecond processing on a modern CPU to access a key


Ethereum account cointains :
                              nonce related to transactions.
                              amount of ethers in that account.
                              contract code
                               Storage.
                              
                              Account Lifecycle has following points :
                                                                      1.Creation
                                                                      2.Deletion
                                                                      3.Update
                                                                      4.Export
                                                                      5.Import
                              
                              Exporting an account :
                                                       When exporting an existing account, the caller must supply both the current passphrase to decrypt the account, as well as an export passphrase to re-
                                                       encrypt it with before returning the key-file to the user.
                              Importing an account :
                                                       When importing a new account, the caller must supply both the encryption passphrase of the key-file being imported, as well as a new passhprase with 
                                                       which to store the account. This is required to allow storing account with different credentials than used for moving them around.
                              Signing in to an account :
                                                         1.Single Signature : Where for every transaction you need to give password and address of account.
                                                         2.Multiple Signature : Unlock the account once only and sign all the transaction once and then again lock them.
 

Ethereum transaction contains:       Recept of transaction
                                     Amount of Wei
                                     Signature of sender authorizing it
                                     Message
                                     START GAS   ---    max computatinal steps the transaction is allowed.                                         
                                     Gas price  ----    fee the sender pays per computational step                                        

Ethereum block contain :             Block header
                                      trasactions
                                     runnerup block header.
 
 
Ehtereum full node contains:
                                  Software needed for transaction initiati
                                  mining
                                  validation
                                 block generation
                                  smart contract execution
                                  EVM

Ethereum Tokens :
                        Associated with the blockchain
                        Can we converted into currency
                        Gold certificates
                        shares
                        Loyaalty points.
Smart contract creates tokens and manage them in all aspects.
Send some ehter to smart contract to get tokens.
To keep trade between different smart contracts that build tokens (i.e. trade btn token-token) u need to write different code.
And collect tokens into wallet again different code is needed to be written.
                            
        💁️ INSTEAD

       -ERC20 was proposed that allowed to do all such things and like an interface that implements 6 methos in ur code.
       -Name of token
       -symbol
       -decimal

        METHODS
       -total suppy of tokens (max. tokens)
       -balanceof (return how may tokens the given address has)
       -transfer (transfer from the contract to user)
       -transfer from (transfer from one user to another)
       -approve (verifies that the contract has enough tokens to give to user)
       -allowance (verifies that user has enough tokens to give to another user)
 
Meaasages : Only contract can send message to other contract or EOA.
            They are like transactions in ethreum only originate through a contract.
            they include : 

            
    The sender of the message (implicit)
    The recipient of the message
    The amount of ether to transfer alongside the message
    An optional data field
    A STARTGAS value

    When a CALL or a DELEGATECALL instrurction is executed in a contract a message is been made to other contract.


Consensus :     Memory based rather than cPU based proof of work.


Whenever the receipient address is null the ethereum considers it as a "new contract" and assigns it creator + nonce address.
 Smart contarct output is stored in receipt. 
 Smart Contracts can be used in financial derivatives to insurance premiums, breach contracts, property law, credit enforcement, financial services, legal processes, and crowdfunding agreements. 
  1. Autonomy
  2. Trust
  3. Accuracy
  4. Back up
  5. Savings


                                         //////////////        Blockchain contains state hash and receipt hash     /////////////////

States in ethreum : 
                  everthuing is calculated through states.

                  APPLY(S,TX) -> S' or ERROR

                  APPLY({ Alice: $50, Bob: $50 },"send $20 from Alice to Bob") = { Alice: $30, Bob: $70 }

        But:  

                 APPLY({ Alice: $50, Bob: $50 },"send $70 from Alice to Bob") = ERROR



    For each input in TX:
        If the referenced UTXO is not in S, return an error.
        If the provided signature does not match the owner of the UTXO, return an error.

    If the sum of the denominations of all input UTXO is less than the sum of the denominations of all output UTXO, return an error.

    Return S' with all input UTXO removed and all output UTXO added.





                                      -------------------    GAS P0INTS     -------------------
                                                     ethereum price varies with market but gas points donot vary.	
                                       a transaction has to pay the gas points as well as fees to minor.Gas ponits are like internet fees and minor fees ae like website fees.
                               Gas points for a particular transaction are specified during minnig.

                                        ------------------ Gas points ? Gas price ------------ (is it different) == no not different                
                                  If provided gas gets finished in middle then every change id=s reverted to original.


In ethreum blockchain :     each transaction has gaspoints.
                            Gas points are requiresto pay to the minor for that particular transaction
                            


                            each block has 
                            Gaslimit --  total gas that is available for a block.
                            Gas spent  ------ actual amount of gas spent at thr completion of block creation.


When a block is created , it has a transaction fee specified and the base fee of three ether. 
There are Ommers inside a ethreum blockchain who are minors who have also created the block but not won it.they are given a small percentage of gas points.

EVM :  EVM has three storage areas                        
       1. Storage :The contract's long-term storage, a key/value store. Unlike stack and memory, which reset after computation ends, storage persists for the long term.
       2. Memory : an infinitely expandable byte array mainly maintained  or given for a particular function of contract.
       3. Stack : computation work is performed on stack

Instruction set : 
       1. Condidtional jump/unconditional jump
       2. access block number , timestamp of block.


Contracts :
        You can also destruct a contract after its work is done once.
        Ethers sent to self distruct contract are lost .
        So it is better to disable the contract instead.
        Even if u self destruct your contract does not mean its deleted its restained in history and in other computers hard disk as well.


                                    Ehtereum Homstead, Metropolis ,Sereniyt ???????????????????????????????????  ==== These are all ethereum releases/versions


                                                       👨‍🔧️👨‍🔧️👨‍🔧️     Tasks performed by a minor :    👨‍🔧️👨‍🔧️👨‍🔧️

             
         Check if the transaction is well-formed (ie. has the right number of values), the signature is valid, and the nonce matches the nonce in the sender's account. If not, return an error.
         Calculate the transaction fee as STARTGAS * GASPRICE, and determine the sending address from the signature. Subtract the fee from the sender's account balance and increment the sender's nonce. If there is not enough balance to spend, return an error.
         Initialize GAS = STARTGAS, and take off a certain quantity of gas per byte to pay for the bytes in the transaction.
         Transfer the transaction value from the sender's account to the receiving account. If the receiving account does not yet exist, create it. If the receiving account is a contract, run the contract's code either to completion or until the execution runs out of gas.
         If the value transfer failed because the sender did not have enough money, or the code execution ran out of gas, revert all state changes except the payment of the fees, and add the fees to the miner's account.
         Otherwise, refund the fees for all remaining gas to the sender, and send the fees paid for gas consumed to the miner.
  

         If there is no account on receiver side then the total transaction fees are simply gas Prices*Total length of transaction. as the minor fees will not be paid due to no actual transaction taking
         place but only the checking by minor is done. 

  Computatinal state (while EVM is running) :
                  
              == (block_state, transaction, message, code, memory, stack, pc, gas).

    block_state contains all the accounts in the block, their balances and storage. 
    Maximum limit of computational steps are set in each transaction if exceeded it is reverted wiht fees being paid. (START GAS value)

Decentralized Storage :
       
         IPFS (Interplanetray File System)
   1.Allowing files to go distirbuted
   2.Anyone can request for certain file and once file comes can check the hash whether its tampered or not.
   3.IPFS object contains :  
                           DAta === size-256kb
                           Link
      multiple objects can be linked with one another.
      if file>256kb then multiple obj are usedand are linked.      


   Drawback :
      if node containing file is inactive then file is gone
   
  So,solution:
    1.Make that file to be available to some more users 
    2.Incentivize the nodes so Filecoin got created.


    -Tranfer of file anywhere can take place and nodes can rent their space to others to store their file.


   More application on ethereum in ethereum white paper.

Uncles in Ethereum :
    
    1.These are blocks mined by other miners but little late.
    2.These minors also get reward to mine the uncles.
    3.the block that contains the uncle should lie between 2<= block <=7.
    4.For every uncle U in block B, the miner of B gets an additional 3.125% added to its coinbase reward and the miner of U gets 93.75% of a standard coinbase reward.  
  

                                                                           💨️💨️💨️💨️   GAS


               In bitcoin the trnsaction fee is decided by length of the code or transaction.
               But in ethereum the amount of work done in performing that operation is taken into consideration.


                       🔗️🔗️🔗️🔗️  Link for all gas for oprerations : https://docs.google.com/spreadsheets/d/1m89CVujrQe5LAFJ8-YAUCcNK950dUzMQPMJBxRtGCqs/edit?usp=sharing

     1.For every 256 bits of data 6 gas is needed.
     2.To perfrom Keccak256 hasing or evaluate it 30 gas is needed.
     3.The price of one unit of gas is decided by the miners, currently it is around 5 to 21 GWei (One GWei is 10^9 Wei or 10^-9 Ether).
     4.You are free to specify a gasprice, or keep the suggest one.
     5.we issue Ether whose value is supposed to vary, but also implement a Gas Price in terms of Ether. If the price of Ether goes up, the Gas Price in terms of Ether should go down to keep the real cost 
       of Gas the same.
     6.Gas Cost is a static value for how much a computation costs in terms of Gas, and the intent is that the real value of the Gas never changes, so this cost should always stay stable over time.
     7.Gas Price is how much Gas costs in terms of another currency or token like Ether. To stabilise the value of gas, the Gas Price is a floating value such that if the cost of tokens or currency fluctuates, the Gas Price changes to keep the same real value. The Gas Price is set by the equilibrium price of how much users are willing to spend, and how much processing nodes are willing to accept.
     8.Gas Limit is the maximum amount of Gas that can be used per block, it is considered the maximum computational load, transaction volume, or block size of a block, and miners can slowly change this value over time.
     9.Gas Fee is effectively the amount of Gas needed to be paid to run a particular transaction or program (called a contract). The Gas Fees of a block can be used to imply the computational load, transaction volume, or size of a block. The gas fees are paid to the miners (or bonded contractors in PoS).




[ 1 ] A transaction with too little fuel will not even reach miners, regardless of the fee supplied.

[ 2 ] If adequate fuel is provided for a transaction, but the fee is too low, even though the transaction may reach miners, upon examining the transaction miners will not perform any computation.

[ 3 ] A low fuel transaction implies that it will use little computation or storage resources of the EVM, or that at runtime it will hit an Out of Gas exception and be reverted.

[4, 5, 6] Fees determine the order in which transactions will be included in the blockchain.

[ 7 ] The reason why providing high fuel can lead to a transaction taking longer to get mined is discussed in the section Potential delays with high startGas.



     ====================== Receipts =============
   
     contain hash of final state
     logs  :      logs contains 4 topics at max and data . u can search particular log by their topic
     cumulative gas used	

 

   =================== ORACLES  ===========================

 They allow external data to get stored into the contract just like adding externla depedencies into android studio.
 
 Process :    you register with their contract and define a function they should call
              their contract is read by an external entity, that sees your "query"
              the external entity executes the query (eg. calling random.org)
              calls your callback function either directly or through their contract
              profit ;-)


     when u want to include oracle in ur contract it creates its own directory fot that

    	├── caller
	│   ├── contracts
	│   ├── migrations
	│   ├── test
	│   └── truffle-config.js
	├── oracle
	│   ├── contracts
	│   ├── migrations
	│   ├── test
	│   └── truffle-config.js
	└── package.json

    more on oracles in solidty file

  
           *************  MetaMask ******************
  
   Metamask is a browser that interacts with blockchain network. Basically u can inteact with ur blockchain with the help of ur browser through metamask
   It allows u to contact the blockchain even without having entire full node with u


         ************* Web3.js ***********************

   It is a library that helps nodes to interact with entire blockchain by commands.


  commands for ethereum blockchain ::
       sudo apt-get install software-properties-common
       sudo add-apt-repository -y ppa:ethereum/ethereum
       sudo apt-get update
       sudo apt-get install ethereum


                                                      $$$$$$$$$$$$$$$$$$$    DAPPs    $$$$$$$$$$$$$$$$$$$$$$$

   1.Ethereum API : ethereum apis are useful for interacting with etherum blockchain from user side. Eg - miner.start()
                    Management API - admin,miner,personal,txpool
                    Web3 API - web3,eth,net
   
   for new account : personal.newAccount()
   for view your balance : eth.viewBalance()
   to see nodes connected to network : 	admin.peers()

   Truffle : IDE for complete testing,deploying dapp on test network n all
             migrants.js : help for deplyment of our contract
                           keeps track of changes
             test.js : contains both solidity and js test enviromnent
             truffle.js : contains port number nall


 Ethereum metropolis : proof of work but is not energy based instead its memory based
 ethereum constantinople : thinking to switch to proof of stake
                           where miner is selected based on stake he has
                           min stake to become a validator is 32 ethers and one wiht max stake is choosen
                           miner fee is selected based on transaction fees in pos
                           To avoid monopoly by the node with most stake, an age based round robin policy is used in addition to the basic POS.   ?????//
                           one drawback is when u have nothing at stake so alternative is casper protocol
                           so if u have 3% of bitcoin or altcoin then u can mine 3% of blocks
                           so inorder to do 51% attack u need 51% of altcoin on POS
             Casper :   one u have made a block prepared with 2/3 of minors or validators putting in stake and its validated from among one then it has to be bet upon by 
                        2/3 of validators and block gets accepted
                       

PBFT (Practical byzentine fault tolerance) :
                           nodes vote to elect a leader and that leader adds next block
                           f = number of faulty nodes
                           3f + 1 = number of total nodes         2f+1 = number of validating nodes
                           step1 : a proposed leader takes transacrions from the pool and then form a block.SO the block is now pre-prepared
                           step2 : the pre-prepared block is then validated and all of them wait until 2f+1 validations are made and then block is prepared
                           Step3 : prepared block is then commited to the chain.So they shld have 2f+1 commit msggs
                           mainly used in hyperledger

 



   
   
                          
                                                                          
